package me.shanked.nicatronTg.darklight.view;

import java.io.File;
import java.io.IOException;

import me.shanked.nicatronTg.darklight.view.VulnerabilityOutputGenerator.InvalidTemplateException;

import com.ijg.darklight.sdk.core.IssueHandler;

/*
 * Copyright (C) 2013  Lucas Nicodemus
 * 
 * This file is part of the Darklight Nova Core.
 *  
 * Darklight Nova Core is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Darklight Nova Core is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Darklight Nova Core.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Wrapper for {@link me.shanked.nicatronTg.darklight.view.VulnerabilityOutputGenerator} to easily write a score report
 * 
 * @author Isaac Grant
 * @author Lucas Nicodemus
 * @version .1
 *
 */

public class VulnerabilityOutput {

	private String templatePath = "/templates";
	private String templateName = "score-template.txt";
	
	private String outputPath = "/statics";
	private String outputFile = "scoreoutput";
	private String outputExt = "txt";
	
	private String issueFormatter = "[name] - [description]";
	
	private VulnerabilityOutputGenerator outputGenerator;
	private IssueHandler issueHandler;
	
	/**
	 * @param issueHandler The issue handler to which this output handler with belong
	 */
	public VulnerabilityOutput(IssueHandler issueHandler) {
		this.issueHandler = issueHandler;
		outputGenerator = new VulnerabilityOutputGenerator();
	}
	
	/**
	 * Format the template and write the product
	 */
	public void writeNewOutput() {
		new File(".", outputPath).mkdir();
		try {
			outputGenerator.writeFixedIssues(issueHandler.getFixedIssues(), issueFormatter, templatePath + "/" + templateName, outputPath + "/" + outputFile + "." + outputExt);
		} catch (InvalidTemplateException | IOException e) {
			System.err
					.println("[Darklight Core] Error writing score output file, stack trace:");
			e.printStackTrace();
		}
	}

	/**
	 * Change the template file to use
	 * @param newTemplate The name of the template to use
	 */
	public void setTemplateName(String newTemplate) {
		templateName = newTemplate;
	}
	
	/**
	 * Change the name of the output file
	 * @param newFile The desired name of the output file
	 */
	public void setOutputFile(String newFile) {
		outputFile = newFile;
	}
	
	/**
	 * Change the file extension of the score-output file
	 * @param newExt The desired extension for the score-output file
	 */
	public void setOutputExt(String newExt) {
		outputExt = newExt;
	}
	
	/**
	 * Change the format string for an individual IssueData instance. Must contain the tags: "[name]" and "[description]"
	 * @param newFormatter The format string
	 */
	public void setIssueFormatter(String newFormatter) {
		issueFormatter = newFormatter;
	}
}
